<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.github.blasd.apex</groupId>
		<artifactId>apex-serialization</artifactId>
		<version>1.12-SNAPSHOT</version>
	</parent>

	<artifactId>apex-parquet</artifactId>
	<packaging>jar</packaging>

	<properties>
		<jacoco.instruction.ratio>0.65</jacoco.instruction.ratio>
		<jacoco.branch.ratio>0.50</jacoco.branch.ratio>

		<parquet.version>1.9.0</parquet.version>
		<avro.version>1.8.2</avro.version>
		<hadoop-common.version>2.8.2</hadoop-common.version>

		<!-- TODO -->
		<jacoco.instruction.ratio>0.0</jacoco.instruction.ratio>
		<jacoco.branch.ratio>0.0</jacoco.branch.ratio>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.apache.parquet</groupId>
				<artifactId>parquet-hadoop</artifactId>
				<version>${parquet.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.parquet</groupId>
				<artifactId>parquet-common</artifactId>
				<version>${parquet.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.parquet</groupId>
				<artifactId>parquet-column</artifactId>
				<version>${parquet.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.apache.parquet/parquet-avro -->
			<dependency>
				<groupId>org.apache.parquet</groupId>
				<artifactId>parquet-avro</artifactId>
				<version>${parquet.version}</version>
			</dependency>


			<dependency>
				<!-- https://stackoverflow.com/questions/42352091/spark-sql-fails-with-java-lang-noclassdeffounderror-org-codehaus-commons-compil -->
				<groupId>org.codehaus.janino</groupId>
				<artifactId>commons-compiler</artifactId>
				<version>2.7.8</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>com.github.blasd.apex</groupId>
			<artifactId>apex-avro</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<!-- org.apache.hadoop.fs.Path -->
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-common</artifactId>
			<version>${hadoop-common.version}</version>
			<exclusions>
				<!-- Hadoop-commons brings a ton of unexpected dependencies -->
				<exclusion>
					<!-- Do not force the logging framework -->
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<!-- Hadoop-commons depends on servlet2.5 -->
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>jetty</artifactId>
				</exclusion>
				<exclusion>
					<!-- We do not rely on hadoop for Rest services -->
					<groupId>com.sun.jersey</groupId>
					<artifactId>jersey-core</artifactId>
				</exclusion>
				<exclusion>
					<!-- We do not rely on hadoop for Rest services -->
					<groupId>com.sun.jersey</groupId>
					<artifactId>jersey-json</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jersey</groupId>
					<artifactId>jersey-server</artifactId>
				</exclusion>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.parquet/parquet-hadoop -->
		<dependency>
			<groupId>org.apache.parquet</groupId>
			<artifactId>parquet-hadoop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.parquet</groupId>
			<artifactId>parquet-common</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.parquet</groupId>
			<artifactId>parquet-column</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.parquet</groupId>
			<artifactId>parquet-avro</artifactId>
		</dependency>


		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-avro</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<!-- We ensure this module does not provide log4j, however, tests will needs a Log4J implementation anyway -->
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>